/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Aplikasi;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;
import java.text.DecimalFormat;

/**
 *
 * @author User
 */
public class waktu extends javax.swing.JFrame {
    Clipboard clip = getToolkit().getSystemClipboard();

    /**
     * Creates new form waktu
     */
    public waktu() {
        initComponents();
        setLocationRelativeTo(null);
    }
    
    public void close(){
       WindowEvent closeWindow = new WindowEvent (this, WindowEvent.WINDOW_CLOSING);
       Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        CWaktuawal = new javax.swing.JComboBox<>();
        CWaktuakhir = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtKeterangan4 = new javax.swing.JTextArea();
        HWaktu = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        MWaktu = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setText("Dari");

        jLabel2.setText("ke");

        jLabel3.setText("Input");

        jLabel4.setText("Output");

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Aplikasi Konversi Waktu");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
        );

        CWaktuawal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Detik (s)", "Menit (minute)", "Jam", "Hari", "Minggu", "Bulan", "Tahun" }));
        CWaktuawal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        CWaktuakhir.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Detik (s)", "Menit (minute)", "Jam", "Hari", "Minggu", "Bulan", "Tahun" }));
        CWaktuakhir.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        CWaktuakhir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CWaktuakhirActionPerformed(evt);
            }
        });

        txtKeterangan4.setColumns(20);
        txtKeterangan4.setRows(5);
        jScrollPane1.setViewportView(txtKeterangan4);

        HWaktu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton1.setText("Konversi");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Kembali");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Copy");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(CWaktuawal, 0, 159, Short.MAX_VALUE)
                            .addComponent(MWaktu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CWaktuakhir, javax.swing.GroupLayout.Alignment.TRAILING, 0, 156, Short.MAX_VALUE)
                            .addComponent(HWaktu, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(108, 108, 108)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(29, 29, 29))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CWaktuakhir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CWaktuawal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HWaktu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MWaktu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        close();
        home hom = new home ();
        hom.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void CWaktuakhirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CWaktuakhirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CWaktuakhirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         if (MWaktu.getText().isEmpty()){
            JOptionPane.showConfirmDialog(this, "Nilai tidak boleh kosong", "Pesan eror", JOptionPane.INFORMATION_MESSAGE);
        }else{
            if(CWaktuawal.getSelectedItem().equals("Detik (s)") && CWaktuakhir.getSelectedItem().equals("Detik (s)")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Detik (s) ke Detik (s) adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Menit (minute)") && CWaktuakhir.getSelectedItem().equals("Detik (s)")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 60);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Menit (minute) ke Detik (s) adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Jam") && CWaktuakhir.getSelectedItem().equals("Detik (s)")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 3600);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Jam ke Detik (s) adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Hari") && CWaktuakhir.getSelectedItem().equals("Detik (s)")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 86400);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Hari ke Detik (s) adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Minggu") && CWaktuakhir.getSelectedItem().equals("Detik (s)")){
                String waktu_awal = MWaktu.getText();
                double wktu_awal = Integer.parseInt(waktu_awal);
                double CtoR = (wktu_awal * 604800L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Minggu ke Detik (s)adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Bulan") && CWaktuakhir.getSelectedItem().equals("Detik (s)")){
                String waktu_awal = MWaktu.getText();
                double wktu_awal = Integer.parseInt(waktu_awal);
                double CtoR = (wktu_awal * 2629800);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Bulan ke Detik (s) adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Tahun") && CWaktuakhir.getSelectedItem().equals("Detik (s0")){
                String waktu_awal = MWaktu.getText();
                double wktu_awal = Integer.parseInt(waktu_awal);
                double CtoR = (wktu_awal * 31557600);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Tahun ke Detik (s) adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Detik (s)") && CWaktuakhir.getSelectedItem().equals("Menit (minute)")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal / 60);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Detik (s) ke Menit (minute) adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Menit (minute)") && CWaktuakhir.getSelectedItem().equals("Menit (minute)")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Menit (minute) ke Menit (minute) adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Jam") && CWaktuakhir.getSelectedItem().equals("Menit (minute)")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 60);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Jam ke Menit (minute) adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Hari") && CWaktuakhir.getSelectedItem().equals("Menit (minute)")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 1440);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Hari ke Menit (minute) adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Minggu") && CWaktuakhir.getSelectedItem().equals("Menit (minute)")){
                String waktu_awal = MWaktu.getText();
                double wktu_awal = Integer.parseInt(waktu_awal);
                double CtoR = (wktu_awal * 10080L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Minggu ke Menit (minute) adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Bulan") && CWaktuakhir.getSelectedItem().equals("Menit (minute)")){
                String waktu_awal = MWaktu.getText();
                double wktu_awal = Integer.parseInt(waktu_awal);
                double CtoR = (wktu_awal * 43830);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Bulan ke Menit (minute) adalah "+subtotal); 
            }else if(CWaktuawal.getSelectedItem().equals("Tahun") && CWaktuakhir.getSelectedItem().equals("Menit (minute)")){
                String waktu_awal = MWaktu.getText();
                double wktu_awal = Integer.parseInt(waktu_awal);
                double CtoR = (wktu_awal * 525960);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Tahun ke Menit (minute) adalah "+subtotal);    
            }else if(CWaktuawal.getSelectedItem().equals("Detik (s)") && CWaktuakhir.getSelectedItem().equals("Jam")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal / 3600);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Detik (s) ke Jam adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Menit (minute)") && CWaktuakhir.getSelectedItem().equals("Jam")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal / 60);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Menit (minute) ke Jam adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Jam") && CWaktuakhir.getSelectedItem().equals("Jam")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Jam ke Jam adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Hari") && CWaktuakhir.getSelectedItem().equals("Jam")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 24);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" hari ke Jam adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Minggu") && CWaktuakhir.getSelectedItem().equals("Jam")){
                String waktu_awal = MWaktu.getText();
                double wktu_awal = Integer.parseInt(waktu_awal);
                double CtoR = (wktu_awal * 168L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Minggu ke Jam adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Bulan") && CWaktuakhir.getSelectedItem().equals("Jam")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 730.5);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Bulan ke Jam adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Tahun") && CWaktuakhir.getSelectedItem().equals("Jam")){
                String waktu_awal = MWaktu.getText();
                double wktu_awal = Integer.parseInt(waktu_awal);
                double CtoR = (wktu_awal * 8766L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Tahun ke Jam adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Detik (s)") && CWaktuakhir.getSelectedItem().equals("Hari")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 0.0000115741);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Detik (s) ke Hari adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Menit (minute)") && CWaktuakhir.getSelectedItem().equals("Hari")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 0.00069444);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Menit (minute) ke Hari adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Jam") && CWaktuakhir.getSelectedItem().equals("Hari")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 0.041667);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Jam ke Hari adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Hari") && CWaktuakhir.getSelectedItem().equals("Hari")){
                String waktu_awal = MWaktu.getText();
                double wktu_awal = Integer.parseInt(waktu_awal);
                double CtoR = (wktu_awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Hari ke Hari adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Minggu") && CWaktuakhir.getSelectedItem().equals("Hari")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 7);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Minggu ke Hari adalah "+subtotal); 
            }else if(CWaktuawal.getSelectedItem().equals("Bulan") && CWaktuakhir.getSelectedItem().equals("Hari")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 31);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Bulan ke Hari adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Tahun") && CWaktuakhir.getSelectedItem().equals("Hari")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 365);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Tahun ke Hari adalah "+subtotal);    
            }else if(CWaktuawal.getSelectedItem().equals("Detik (s)") && CWaktuakhir.getSelectedItem().equals("Minggu")){
                String waktu_awal = MWaktu.getText();
                double wktu_awal = Integer.parseInt(waktu_awal);
                double CtoR = (wktu_awal * 00000016534L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Detik (s) ke Minggu adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Menit (minute)") && CWaktuakhir.getSelectedItem().equals("Minggu")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal / 10080);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Menit (minute) ke Minggu adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Jam") && CWaktuakhir.getSelectedItem().equals("Minggu")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal / 168);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Jam ke Minggu adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Hari") && CWaktuakhir.getSelectedItem().equals("Minggu")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 0.142857);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Hari ke Minggu adalah "+subtotal);    
            }else if(CWaktuawal.getSelectedItem().equals("Minggu") && CWaktuakhir.getSelectedItem().equals("Minggu")){
                String waktu_awal = MWaktu.getText();
                double wktu_awal = Integer.parseInt(waktu_awal);
                double CtoR = (wktu_awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Minggu ke Minggu adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Detik (s)") && CWaktuakhir.getSelectedItem().equals("Bulan")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 3.8025705376834734);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Detik (s) ke Bulan adalah "+subtotal); 
            }else if(CWaktuawal.getSelectedItem().equals("Menit (minute)") && CWaktuakhir.getSelectedItem().equals("Bulan")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 0.0000228154);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Menit (minute) ke Bulan adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Jam") && CWaktuakhir.getSelectedItem().equals("Bulan")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 0.00136893);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Jam ke Bulan adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Hari") && CWaktuakhir.getSelectedItem().equals("Bulan")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 0.032854);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Hari ke Bulan adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Minggu") && CWaktuakhir.getSelectedItem().equals("Bulan")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 0.229979);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Minggu ke Bulan adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Bulan") && CWaktuakhir.getSelectedItem().equals("Bulan")){
                String waktu_awal = MWaktu.getText();
                double wktu_awal = Integer.parseInt(waktu_awal);
                double CtoR = (wktu_awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Bulan ke Bulan adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Tahun") && CWaktuakhir.getSelectedItem().equals("Bulan")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 12);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Tahun ke Bulan adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Detik (s)") && CWaktuakhir.getSelectedItem().equals("Tahun")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 3.168808781402895);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Detik (s) ke Tahun adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Menit (minute)") && CWaktuakhir.getSelectedItem().equals("Tahun")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 0.0000019013);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Menit (minute) ke Tahun adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Jam") && CWaktuakhir.getSelectedItem().equals("Tahun")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 0.00011408);
                String subtotal = Double.toString(CtoR);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Jam ke Tahun adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Hari") && CWaktuakhir.getSelectedItem().equals("Tahun")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 0.00273785);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Hari ke Tahun adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Minggu") && CWaktuakhir.getSelectedItem().equals("Tahun")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 0.019165);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Minggu ke Tahun adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Bulan") && CWaktuakhir.getSelectedItem().equals("Tahun")){
                String Waktu_awal = MWaktu.getText();
                double wktu_awal = Double.parseDouble(Waktu_awal);
                double CtoR = (double)(wktu_awal * 0.083333);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Bulan ke Tahun adalah "+subtotal);
            }else if(CWaktuawal.getSelectedItem().equals("Tahun") && CWaktuakhir.getSelectedItem().equals("Tahun")){
                String waktu_awal = MWaktu.getText();
                double wktu_awal = Integer.parseInt(waktu_awal);
                double CtoR = (wktu_awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HWaktu.setText(subtotal);
                txtKeterangan4.setText(null);
                txtKeterangan4.append("  Hasil konversi dari "+MWaktu.getText()+" Tahun ke Tahun adalah "+subtotal);    
                
               
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(waktu.this, "Copy success");
        String toClipBoardText = txtKeterangan4.getText();
        StringSelection stringClip = new StringSelection(toClipBoardText);
        clip.setContents(stringClip, stringClip);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(waktu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(waktu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(waktu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(waktu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new waktu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CWaktuakhir;
    private javax.swing.JComboBox<String> CWaktuawal;
    private javax.swing.JTextField HWaktu;
    private javax.swing.JTextField MWaktu;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtKeterangan4;
    // End of variables declaration//GEN-END:variables

}
