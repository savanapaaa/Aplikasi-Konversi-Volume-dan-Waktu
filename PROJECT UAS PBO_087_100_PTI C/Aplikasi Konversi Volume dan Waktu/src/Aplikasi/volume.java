/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Aplikasi;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;
import java.text.DecimalFormat;
/**
 *
 * @author User
 */
public class volume extends javax.swing.JFrame {
    Clipboard clip = getToolkit().getSystemClipboard();

    /**
     * Creates new form volume
     */
    public volume() {
        initComponents();
        setLocationRelativeTo(null);
    }
    
    public void close(){
       WindowEvent closeWindow = new WindowEvent (this, WindowEvent.WINDOW_CLOSING);
       Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtKeterangan1 = new javax.swing.JTextArea();
        CVolumeawal = new javax.swing.JComboBox<>();
        CVolumeakhir = new javax.swing.JComboBox<>();
        MVolume = new javax.swing.JTextField();
        HVolume = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Aplikasi Konversi Volume");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(114, 114, 114))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
        );

        jLabel2.setText("Dari");

        jLabel3.setText("Ke");

        jLabel4.setText("Input");

        jLabel5.setText("Output");

        txtKeterangan1.setColumns(20);
        txtKeterangan1.setRows(5);
        jScrollPane1.setViewportView(txtKeterangan1);

        CVolumeawal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kilometer Kubik (km3)", "Hektometer Kubik (hm 3)", "Dekameter Kubik (dam 3)", "Meter Kubik (m 3)", "Desimeter Kubik (dm 3)", "Centimeter Kubik (cm 3)", "Milimeter Kubik (mm 3)" }));
        CVolumeawal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        CVolumeakhir.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kilometer Kubik (km3)", "Hektometer Kubik (hm 3)", "Dekameter Kubik (dam 3)", "Meter Kubik (m 3)", "Desimeter Kubik (dm 3)", "Centimeter Kubik (cm 3)", "Milimeter Kubik (mm 3)" }));
        CVolumeakhir.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        MVolume.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        MVolume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MVolumeActionPerformed(evt);
            }
        });

        HVolume.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        HVolume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HVolumeActionPerformed(evt);
            }
        });

        jButton1.setText("Konversi");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Kembali");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Copy");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CVolumeawal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(MVolume, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(73, 73, 73)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(CVolumeakhir, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5)
                                        .addComponent(HVolume))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(105, 105, 105)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))
                        .addGap(0, 15, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CVolumeawal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CVolumeakhir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MVolume, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HVolumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HVolumeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HVolumeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (MVolume.getText().isEmpty()){
            JOptionPane.showConfirmDialog(this, "Nilai tidak boleh kosong", "Pesan eror", JOptionPane.INFORMATION_MESSAGE);
        }else{
            if(CVolumeawal.getSelectedItem().equals("Kilometer Kubik (km3)") && CVolumeakhir.getSelectedItem().equals("Kilometer Kubik (km3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Double.parseDouble(Volume_awal);
                double CtoR = (double)(v_awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Kilometer Kubik (km3) ke Kilometer Kubik (km3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Kilometer Kubik (km3)") && CVolumeakhir.getSelectedItem().equals("Hektometer Kubik (hm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Double.parseDouble(Volume_awal);
                double CtoR = (double)(v_awal * 1000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Kilometer Kubik (km3) ke Hektometer Kubik (hm3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Kilometer Kubik (km3)") && CVolumeakhir.getSelectedItem().equals("Dekameter Kubik (dam 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Double.parseDouble(Volume_awal);
                double CtoR = (double)(v_awal * 1000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Kilometer Kubik (km3) ke Dekameter Kubik (dam 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Kilometer Kubik (km3)") && CVolumeakhir.getSelectedItem().equals("Meter Kubik (m 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (double)(v_awal * 1000000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Kilometer Kubik (km3) ke Meter Kubik (m 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Kilometer Kubik (km3)") && CVolumeakhir.getSelectedItem().equals("Desimeter Kubik (dm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal * 1000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Kilometer Kubik (km3) ke Desimeter Kubik (dm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Kilometer Kubik (km3)") && CVolumeakhir.getSelectedItem().equals("Centimeter Kubik (cm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal * 1000000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Kilometer Kubik (km3) ke Centimeter Kubik (cm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Kilometer Kubik (km3)") && CVolumeakhir.getSelectedItem().equals("Milimeter Kubik (mm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal * 1000000000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Kilometer Kubik (km3) ke Milimeter Kubik (mm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Hektometer Kubik (hm 3)") && CVolumeakhir.getSelectedItem().equals("Kilometer Kubik (km3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Double.parseDouble(Volume_awal);
                double CtoR = (double)(v_awal / 1000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Hektometer Kubik (hm3) ke Kilometer Kubik (km3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Hektometer Kubik (hm 3)") && CVolumeakhir.getSelectedItem().equals("Hektometer Kubik (hm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Double.parseDouble(Volume_awal);
                double CtoR = (double)(v_awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Hektometer Kubik (hm3) ke Hektometer Kubik (hm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Hektometer Kubik (hm 3)") && CVolumeakhir.getSelectedItem().equals("Dekameter Kubik (dam 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Double.parseDouble(Volume_awal);
                double CtoR = (double)(v_awal * 1000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Hektometer Kubik (hm3) ke Dekameter Kubik (dam 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Hektometer Kubik (hm 3)") && CVolumeakhir.getSelectedItem().equals("Meter Kubik (m 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (double)(v_awal * 1000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Hektometer Kubik (hm3) ke Meter Kubik (m 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Hektometer Kubik (hm 3)") && CVolumeakhir.getSelectedItem().equals("Desimeter Kubik (dm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal * 1000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Hektometer Kubik (hm3) ke Desimeter Kubik (dm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Hektometer Kubik (hm 3)") && CVolumeakhir.getSelectedItem().equals("Centimeter Kubik (cm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal * 1000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Hektometer Kubik (hm3) ke Centimeter Kubik (cm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Hektometer Kubik (hm 3)") && CVolumeakhir.getSelectedItem().equals("Milimeter Kubik (mm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal * 1000000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Hektometer Kubik (hm3) ke Milimeter Kubik (mm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Dekameter Kubik (dam 3)") && CVolumeakhir.getSelectedItem().equals("Kilometer Kubik (km3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Double.parseDouble(Volume_awal);
                double CtoR = (double)(v_awal / 1000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Dekameter Kubik (dam 3) ke Kilometer Kubik (km3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Dekameter Kubik (dam 3)") && CVolumeakhir.getSelectedItem().equals("Hektometer Kubik (hm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Double.parseDouble(Volume_awal);
                double CtoR = (double)(v_awal / 1000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Dekameter Kubik (dam 3) ke Hektometer Kubik (hm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Dekameter Kubik (dam 3)") && CVolumeakhir.getSelectedItem().equals("Dekameter Kubik (dam 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Double.parseDouble(Volume_awal);
                double CtoR = (double)(v_awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Dekameter Kubik (dam 3) ke HDekameter Kubik (dam 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Dekameter Kubik (dam 3)") && CVolumeakhir.getSelectedItem().equals("Meter Kubik (m 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (double)(v_awal * 1000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Dekameter Kubik (dam 3) ke Meter Kubik (m 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Dekameter Kubik (dam 3)") && CVolumeakhir.getSelectedItem().equals("Desimeter Kubik (dm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal * 1000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Dekameter Kubik (dam 3) ke Desimeter Kubik (dm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Dekameter Kubik (dam 3)") && CVolumeakhir.getSelectedItem().equals("Centimeter Kubik (cm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal * 1000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Dekameter Kubik (dam 3) ke Centimeter Kubik (cm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Dekameter Kubik (dam 3)") && CVolumeakhir.getSelectedItem().equals("Milimeter Kubik (mm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal * 1000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Dekameter Kubik (dam 3) ke Milimeter Kubik (mm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Meter Kubik (m 3)") && CVolumeakhir.getSelectedItem().equals("Kilometer Kubik (km3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal / 1000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Meter Kubik (m 3) ke Kilometer Kubik (km3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Meter Kubik (m 3)") && CVolumeakhir.getSelectedItem().equals("Hektometer Kubik (hm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Double.parseDouble(Volume_awal);
                double CtoR = (double)(v_awal / 1000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Meter Kubik (m 3) ke Hektometer Kubik (hm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Meter Kubik (m 3)") && CVolumeakhir.getSelectedItem().equals("Dekameter Kubik (dam 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Double.parseDouble(Volume_awal);
                double CtoR = (double)(v_awal / 1000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Meter Kubik (m 3) ke Dekameter Kubik (dam 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Meter Kubik (m 3)") && CVolumeakhir.getSelectedItem().equals("Meter Kubik (m 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (double)(v_awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Meter Kubik (m 3) ke Meter Kubik (m 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Meter Kubik (m 3)") && CVolumeakhir.getSelectedItem().equals("Desimeter Kubik (dm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal * 1000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Meter Kubik (m 3) ke Desimeter Kubik (dm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Meter Kubik (m 3)") && CVolumeakhir.getSelectedItem().equals("Centimeter Kubik (cm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal * 1000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Meter Kubik (m 3) ke Centimeter Kubik (cm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Meter Kubik (m 3)") && CVolumeakhir.getSelectedItem().equals("Milimeter Kubik (mm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal * 1000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Meter Kubik (m 3) ke Milimeter Kubik (mm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Desimeter Kubik (dm 3)") && CVolumeakhir.getSelectedItem().equals("Kilometer Kubik (hm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal / 1000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Desimeter Kubik (dm 3) ke Kilometer Kubik (hm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Desimeter Kubik (dm 3)") && CVolumeakhir.getSelectedItem().equals("Hektometer Kubik (hm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal / 1000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Desimeter Kubik (dm 3) ke Hektometer Kubik (hm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Desimeter Kubik (dm 3)") && CVolumeakhir.getSelectedItem().equals("Dekameter Kubik (dam 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Double.parseDouble(Volume_awal);
                double CtoR = (double)(v_awal / 1000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Desimeter Kubik (dm 3) ke Dekameter Kubik (dam 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Desimeter Kubik (dm 3)") && CVolumeakhir.getSelectedItem().equals("Meter Kubik (m 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal * 1000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Desimeter Kubik (dm 3) ke Meter Kubik (m 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Desimeter Kubik (dm 3)") && CVolumeakhir.getSelectedItem().equals("Desimeter Kubik (dm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Desimeter Kubik (dm 3) ke Desimeter Kubik (dm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Desimeter Kubik (dm 3)") && CVolumeakhir.getSelectedItem().equals("Centimeter Kubik (cm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal * 1000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Desimeter Kubik (dm 3) ke Centimeter Kubik (cm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Desimeter Kubik (dm 3)") && CVolumeakhir.getSelectedItem().equals("Milimeter Kubik (mm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal * 1000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Desimeter Kubik (dm 3) ke Milimeter Kubik (mm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Centimeter Kubik (cm 3)") && CVolumeakhir.getSelectedItem().equals("Kilometer Kubik (hm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal / 1000000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Centimeter Kubik (cm 3) ke Kilometer Kubik (hm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Centimeter Kubik (cm 3)") && CVolumeakhir.getSelectedItem().equals("Hektometer Kubik (hm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal / 1000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Centimeter Kubik (cm 3) ke Hektometer Kubik (hm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Centimeter Kubik (cm 3)") && CVolumeakhir.getSelectedItem().equals("Dekameter Kubik (dam 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal / 1000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Centimeter Kubik (cm 3) ke Dekameter Kubik (dam 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Centimeter Kubik (cm 3)") && CVolumeakhir.getSelectedItem().equals("Meter Kubik (m 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal / 1000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Centimeter Kubik (cm 3) ke Meter Kubik (m 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Centimeter Kubik (cm 3)") && CVolumeakhir.getSelectedItem().equals("Desimeter Kubik (dm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal / 1000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Centimeter Kubik (cm 3) ke Desimeter Kubik (dm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Centimeter Kubik (cm 3)") && CVolumeakhir.getSelectedItem().equals("Centimeter Kubik (cm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Centimeter Kubik (cm 3) ke Centimeter Kubik (cm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Centimeter Kubik (cm 3)") && CVolumeakhir.getSelectedItem().equals("Milimeter Kubik (mm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal * 1000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Centimeter Kubik (cm 3) ke Milimeter Kubik (mm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Milimeter Kubik (mm 3)") && CVolumeakhir.getSelectedItem().equals("Kilometer Kubik (hm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal / 1000000000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Milimeter Kubik (mm 3) ke Kilometer Kubik (hm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Milimeter Kubik (mm 3)") && CVolumeakhir.getSelectedItem().equals("Hektometer Kubik (hm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal / 1000000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Milimeter Kubik (mm 3) ke Hektometer Kubik (hm 3 adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Milimeter Kubik (mm 3)") && CVolumeakhir.getSelectedItem().equals("Dekameter Kubik (dam 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal / 1000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Milimeter Kubik (mm 3) ke Dekameter Kubik (dam 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Milimeter Kubik (mm 3)") && CVolumeakhir.getSelectedItem().equals("Meter Kubik (m 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal / 1000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Milimeter Kubik (mm 3) ke Meter Kubik (m 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Milimeter Kubik (mm 3)") && CVolumeakhir.getSelectedItem().equals("Desimeter Kubik (dm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal / 1000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Milimeter Kubik (mm 3) ke Desimeter Kubik (dm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Milimeter Kubik (mm 3)") && CVolumeakhir.getSelectedItem().equals("Centimeter Kubik (cm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal / 1000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Milimeter Kubik (mm 3) ke Centimeter Kubik (cm 3) adalah "+subtotal);
            }else if(CVolumeawal.getSelectedItem().equals("Milimeter Kubik (mm 3)") && CVolumeakhir.getSelectedItem().equals("Milimeter Kubik (mm 3)")){
                String Volume_awal = MVolume.getText();
                double v_awal = Integer.parseInt(Volume_awal);
                double CtoR = (v_awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = Double.toString(CtoR);
                HVolume.setText(subtotal);
                txtKeterangan1.setText(null);
                txtKeterangan1.append("  Hasil konversi dari "+MVolume.getText()+" Milimeter Kubik (mm 3) ke Milimeter Kubik (mm 3) adalah "+subtotal);
            }
        }               
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here
        close ();
        home hom = new home();
        hom.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(volume.this, "Copy success");
        String toClipBoardText = txtKeterangan1.getText();
        StringSelection stringClip = new StringSelection(toClipBoardText);
        clip.setContents(stringClip, stringClip);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void MVolumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MVolumeActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_MVolumeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(volume.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(volume.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(volume.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(volume.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new volume().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CVolumeakhir;
    private javax.swing.JComboBox<String> CVolumeawal;
    private javax.swing.JTextField HVolume;
    private javax.swing.JTextField MVolume;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtKeterangan1;
    // End of variables declaration//GEN-END:variables

}
